// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                    String  @id @default(cuid())
  userId                String
  type                  String
  provider              String
  providerAccountId     String
  refreshTokenExpiresIn String?
  refresh_token         String?
  access_token          String?
  expires_at            Int?
  token_type            String?
  scope                 String?
  id_token              String?
  session_state         String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now()) @map("created_at")

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  language      String    @default("English")

  // Payment
  stripeCustomerId String?
  plan             UserPlan @default(FREE)

  // Resend email
  resendContactId String?

  // For the Credentials provider
  passwordHash String?

  sessions       Session[]
  accounts       Account[]
  feedbacks      Feedback[]
  notes          Note[]
  summaries      Summary[]
  configurations Configuration[]
}

model Feedback {
  id      String  @id @default(cuid())
  review  Int
  message String
  email   String?
  userId  String?
  user    User?   @relation(fields: [userId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserPlan {
  FREE
  PREMIUM
}

// PowerNote.app tables

model Note {
  id           String        @id @default(cuid())
  date         DateTime      @default(now())
  userId       String
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  informations Information[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Information {
  id     String            @id @default(cuid())
  name   String
  type   ConfigurationType
  value  String
  noteId String
  notes  Note              @relation(fields: [noteId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Summary {
  id      String   @id @default(cuid())
  type    String
  content String
  date    DateTime @default(now())
  userId  String
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Configuration {
  id          String            @id @default(cuid())
  type        ConfigurationType
  name        String
  description String?
  userId      String
  user        User              @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ConfigurationType {
  BOOLEAN
  STRING
  NUMBER
}
